#!/bin/bash
# recordCam.sh
# ------------
# This script saves the live video from the Foscam IP camera to a full-quality mp4 file.
# I chose to split the files every 15 minutes (900 seconds), to quickly find the time I need.
# Note: audio is not saved as my cameras don't have a microphone connected to them.
# -----------
# Author: @LucaTNT
# License: BSD

# Uncomment this line if you're having trouble with zero-sized files (tipically happens on low end cameras), thanks Eric! (https://lucatnt.com/2014/08/record-and-archive-video-from-ip-cameras/#comment-48019)
# killall -INT ffmpeg


# The file name. I use the date to make finding files easier.
name="`date +%Y-%m-%d_%H.%M`"

# Where the videos will be saved
BASEpath='{{video_record_home_dir}}'
RECpath=$BASEpath'/video'

# Save the streams using ffmpeg at 30 fps, stopping the capture after 901 seconds (15 minutes + 1 second). Add more lines if you have more than 2 cameras
{% for camera in cameras %}
ffmpeg -i rtsp://{{ camera.credentials }}{{ camera.ip }}:{{ camera.port }}/unicast -c:v copy -t 901 $RECpath/{{ camera.name }}_$name.mp4 </dev/null >/dev/null 2>/tmp/{{ camera.name }}.log &
sleep 1
{% endfor %}


#below hardware accelerated codecs settings if needed.
{% for camera in cameras %}
#ffmpeg -i rtsp://{{ camera.credentials }}{{ camera.ip }}:{{ camera.port }}/unicast -r 30 -b:v 1k -c:v h264_omx -t 901  $RECpath/{{ camera.name }}_$name.mp4 </dev/null >/dev/null 2>/tmp/{{ camera.name }}.log &
{% endfor %}
