---
- name: Configure survelliance rpi box 
  hosts: all
  connection: local
  become: yes

  tasks:
  - name: include vars
    include_vars: surv_config.yml
# installing required packages
  - name: ensure openssh-server is installed
    apt: name=openssh-server state=latest
  - service:
      name: ssh
      state: started

  - name:
    apt: name=apache2 state=latest
  - service:
      name: apache2
      state: started

  - name: Configuring apahce to expose folder with videos
    template: src=000-default.conf dest=/etc/apache2/sites-available   
    notify: 
      - restart apache

  - name: Configuring apache permissions on folder exposed
    template: src=apache2.conf dest=/etc/apache2/apache2.conf
    notify:
      - restart apache
 
  - name: Downloading telegraf
    get_url:
      url="https://dl.influxdata.com/telegraf/releases/telegraf_1.3.4-1_armhf.deb"
      dest="/tmp/telegraf.deb"

  - name: Installing telegraf
    apt: deb="/tmp/telegraf.deb"

  - name: Configure Telegraf
    template: src=telegraf.j2 dest=/etc/telegraf/telegraf.conf
    notify:
      - restart telegraf 
  
# configuring files and folders
  - name: Creating video folder if necessary
    file: path={{video_record_home_dir}} state=directory owner={{video_user}} group={{video_user}} mode=0755

  - name: Creating video folder if necessary
    file: path={{video_record_home_dir}}/video state=directory owner={{video_user}} group={{video_user}} mode=0755
  
  - name: Creating video record script
    template: src=record.j2 dest={{video_record_home_dir}}/record.sh mode="u+x" owner={{video_user}} group={{video_user}}

  - name: ffserver job auto-restarter
    template: src=check_ffserver_running.sh dest={{video_record_home_dir}} mode="u+x" owner={{video_user}} group={{video_user}}

  - name: camera restarter
    template: src=reboot_cams.j2 dest={{video_record_home_dir}}/reboot_cams.sh mode="u+x" owner={{video_user}} group={{video_user}}

  - name: Ensuring ffserver config is correct
    template: src=ffserver.j2 dest=/etc/ffserver.conf mode="u+r" owner=root group=root

  - name: Adding record job to crontab
    cron: name="record videos" minute="*/15" user={{video_user}} job="{{video_record_home_dir}}/record.sh"

  - name: Creating video cleanup script
    template: src=cleanup.sh dest={{video_record_home_dir}} mode="u+x" owner={{video_user}} group={{video_user}}

  - name: Adding disk cleanup job to crontab
    cron: name="cleanup disk space" minute="*/1" user={{video_user}} job="{{video_record_home_dir}}/cleanup.sh"

  - name: Adding restart ffserver job to crontab
    cron: name="restart ffserver app" hour="*/1" minute="*/3" user={{video_user}} job="pkill ffserver"

  - name: Adding ffserver healthcheck job to crontab
    cron: name="ffserver health check" minute="*/2" user={{video_user}} job="{{video_record_home_dir}}/check_ffserver_running.sh"

  - name: Adding reboot cams job to crontab
    cron: name="reboot cams at night" hour="*/2" user={{video_user}} job="{{video_record_home_dir}}/reboot_cams.sh"

# configuring ports 22 and 80 be opened
  - name: Open port 80
    ufw: rule="allow" port="80" proto="tcp" 

  - name: Open port 22
    ufw: rule="allow" port="22" proto="tcp"
 
  handlers:
    - name: restart telegraf
      service: name=telegraf state=restarted
    - name: restart apache
      service: name=apache2 state=restarted
